name: main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # verify that Cargo.lock passes audit
  cargo-audit:
    name: Run cargo audit
    needs: []
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch latest release version of cargo-audit
      run: |
        mkdir -p .github/caching
        cargo search cargo-audit | grep '^cargo-audit' | awk '{gsub(/"/,"",$3); print $3}' > .github/caching/cargo-audit.lock
    - name: Cache cargo-audit/bin
      id: cache-cargo-audit
      uses: actions/cache@v1
      with:
        path: ${{ runner.tool_cache }}/cargo-audit/bin
        key: cargo-audit-bin-${{ hashFiles('.github/caching/cargo-audit.lock') }}
    - name: Install cargo-audit
      if: "steps.cache-cargo-audit.outputs.cache-hit != 'true'"
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: --root ${{ runner.tool_cache }}/cargo-audit --force cargo-audit
    - run: echo "${{ runner.tool_cache }}/cargo-audit/bin" >> $GITHUB_PATH
    - run: cargo audit

  # verify that code is formatted
  cargo-fmt:
    name: Run cargo fmt
    needs: []
    runs-on: ubuntu-latest
    env:
      RUST_TOOLCHAIN: nightly
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          command: fmt
          args: --all -- --check

  # verify that tests pass
  cargo-test-agnostic:
    name: Run cargo test (runtime-agnostic)
    needs: []
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust-version: [1.52.0, beta, nightly]
        include:
        - rust-version: nightly
          continue-on-error: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-version }}
          override: yes
      - name: Run cargo test
        continue-on-error: ${{ matrix.continue-on-error || false }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --no-default-features --features runtime-agnostic

  # verify that tests pass
  cargo-test-tokio:
    name: Run cargo test (runtime-tokio)
    needs: []
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust-version: [1.52.0, beta, nightly]
        include:
        - rust-version: nightly
          continue-on-error: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-version }}
          override: yes
      - name: Run cargo test
        continue-on-error: ${{ matrix.continue-on-error || false }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --no-default-features --features runtime-tokio
